linters-settings:
  depguard:
    list-type: blacklist
    packages:
      # logging is allowed only by logutils.Log, logrus
      # is allowed to use only in logutils package
      - github.com/sirupsen/logrus
    packages-with-error-message:
      - github.com/sirupsen/logrus: "logging is allowed only by logutils.Log"
  dupl: # todo this kills testing
    # tokens count to trigger issue, 150 by default
    threshold: 500
  exhaustive:
    default-signifies-exhaustive: false
  errcheck:
    # report about not checking of errors in type assertions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: true
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: true
  funlen:
    lines: 100
    statements: 50
  gci:
    local-prefixes: github.com/golangci/golangci-lint
  goconst:
    # minimal length of string constant, 3 by default
    min-len: 3
    # minimal occurrences count to trigger, 3 by default
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 15
  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true
  gofumpt:
    # Choose whether or not to use the extra rules that are disabled
    # by default
    extra-rules: false
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    # minimal confidence for issues, default is 0.8
    min-confidence: 0
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    check-shadowing: false # todo enable and fix in code
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 140
  maligned:
    suggest-new: true
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
  unused:
    # treat code as a program (not a library) and report unused exported identifiers; default is false.
    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: true

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - bodyclose
    - deadcode
    # - depguard
    # - dogsled
    #- dupl # this breaks the linter
    - errcheck
    # - exhaustive
    # - funlen
    # - gochecknoinits
    - gci
    - goconst
    # - gocritic
    - gocyclo
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - golint
    # - gomnd
    # - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - interfacer
    # - lll
    - maligned
    # - misspell
    # - nakedret
    - noctx
    # - nolintlint
    - rowserrcheck
    # - scopelint
    - staticcheck
    - structcheck
    - stylecheck
    # - typecheck
    - unconvert
    # - unparam
    - unused
    - varcheck
    # - whitespace
    # don't enable:
    - asciicheck
    # - gochecknoglobals
    - gocognit
  # - godot
  # - godox
  # - goerr113
  # - nestif
  # - prealloc
  # - testpackage
  # - wsl
issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - unused
    - path: sauce\.go
      linters:
        - unused
        #     # https://github.com/go-critic/go-critic/issues/926
#     - linters:
#         - gocritic
#       text: "unnecessaryDefer:"

# run:
#   skip-dirs:
#     - internal
#     - static
# golangci.com configuration
# https://github.com/golangci/golangci/wiki/Configuration
# service:
#   golangci-lint-version: 1.23.x # use the fixed version to not introduce new linters unexpectedly
#   prepare:
#     - echo "here I can run custom commands, but no preparation needed for this repo"
