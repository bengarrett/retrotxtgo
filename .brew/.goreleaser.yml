# .goreleaser.yml
#
# A specific config for homebrew releases that cannot be run as a Github Action.
#
# Instructions:
# 1) Push all changes to the bengarrett/retrotxtgo.
# 2) On github publish a new release tag and let the Github Action finish.
# 3) In a local terminal do the following:
#
# cd github/retrotxtgo
# git pull
# export GITHUB_TOKEN="YOUR_GH_TOKEN"
# goreleaser release --skip-validate --rm-dist --config .brew/.goreleaser.yml
#
# To test the config:
# goreleaser check
# goreleaser release --skip-publish --skip-validate --rm-dist

before:
  hooks:
    - go mod tidy
builds:
  - id: macOS
    binary: retrotxt
    goos: ['darwin']
    goarch: ['amd64', 'arm64']
    dir: ./

archives:
  - id: macOS
    builds: ['macOS']
    format: tar.gz
    files:
    - none*
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"

universal_binaries:
  - id: macOS
    name_template: retrotxt
    replace: true

release:
  github:
    owner: bengarrett
    name: homebrew-retrotxt

brews:
  -
    name: retrotxt
    ids: ['macOS']

    tap:
      owner: bengarrett
      name: homebrew-retrotxt

    # Your app's homepage.
    homepage: "https://retrotxt.com/go"

    # Your app's description.
    description: "RetroTxtGo is the tool that turns ANSI, ASCII, NFO text into in-browser HTML."

    # SPDX identifier of your app's license.
    license: "LGPL 3.0"

    test: |
      system "#{bin}/retrotxt --version"

    install: |
      bin.install "retrotxt"