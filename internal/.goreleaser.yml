# RetroTxt Go goreleaser.yaml file.
# Documentation at http://goreleaser.com
# Go environments https://golang.org/doc/install/source#environment
project_name: retrotxt
release:
  draft: false # setting to true breaks scoop
  prerelease: auto
before:
  hooks:
    - go mod download
    #- golangci-lint run
    #- go generate ./... # this will create a dirty state
env:
  - CGO_ENABLED=0
  - GO111MODULE=on
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  skip: true
builds:
  # windows and linux compressed binaries
  - main: ../main.go
    id: retrotxt
    binary: retrotxt
    goos:
      - linux
      - windows
    goarch:
      - amd64
    hooks:
      post:
        # for quick build speed avoid using upx compression flags (https://upx.github.io/)
        # --best (compress a further 500kB) or --brute (compress a further 1.2MB)
        - upx -qq "{{ .Path }}"
  # raspberry pi
  - main: ../main.go
    id: pi
    binary: retrotxt
    goos:
      - linux
    goarch:
      - arm
    goarm:
      - 6
      - 7
    hooks:
      post:
        - upx -qq "{{ .Path }}"
  # linux for rpm and apk alpine linux
  - main: ../main.go
    id: rpm
    binary: retrotxt
    goos:
      - linux
    goarch:
      - amd64
    hooks:
      post:
        - upx -qq "{{ .Path }}"
  # freebsd with no upx compression
  - main: ../main.go
    id: uncompressed
    binary: retrotxt
    goos:
      - freebsd
    goarch:
      - amd64
  # macos with no upx compression
  - main: ../main.go
    id: macos
    binary: retrotxt
    goos:
      - darwin
    goarch:
      - amd64
      - arm64 # Go v1.60 should have M1 support?
archives:
  - name_template: "retrotxt_{{ if .Arm }}raspberry{{ .Arm }}{{ else }}{{ .Os }}{{ end }}"
    builds:
      - retrotxt
      - uncompressed
      - macos
    replacements:
      darwin: macos
      freebsd: freebsd
      linux: linux
      windows: windows
      386: ""
      amd64: ""
    format_overrides:
      - goos: darwin
        format: zip
      - goos: windows
        format: zip
brews:
  - skip_upload: auto
    tap:
      owner: bengarrett
      name: homebrew-tap
    folder: Formula
    homepage: https://retrotxt.com/go
    description: RetroTxt is the tool that turns ANSI, ASCII, NFO text into in-browser HTML.
nfpms:
  - id: "deb"
    file_name_template: "retrotxt_{{ if .Arm }}raspberry{{ .Arm }}{{ else }}{{ .Os }}{{ end }}"
    builds:
      - retrotxt
      - pi
    vendor: Ben Garrett
    homepage: https://retrotxt.com/go
    maintainer: Ben Garrett <code.by.ben@gmail.com>
    description: RetroTxt is the tool that turns ANSI, ASCII, NFO text into in-browser HTML.
    license: LGPL 3.0
    replacements:
      6: "_pi-zero"
      7: "_pi"
    formats:
      - deb
  - id: "rpm"
    file_name_template: "retrotxt_{{ .Os }}"
    builds:
      - rpm
    vendor: Ben Garrett
    homepage: https://retrotxt.com/go
    maintainer: Ben Garrett <code.by.ben@gmail.com>
    description: RetroTxt is the tool that turns ANSI, ASCII, NFO text into in-browser HTML.
    license: LGPL 3.0
    formats:
      - apk
      - rpm
scoop:
  bucket:
    owner: bengarrett
    name: retrotxtgo
  commit_author:
    name: Ben Garrett
    email: code.by.ben@gmail.com
  homepage: https://retrotxt.com/go
  description: RetroTxt is the tool that turns ANSI, ASCII, NFO text into in-browser HTML.
  license: LGPL 3.0
